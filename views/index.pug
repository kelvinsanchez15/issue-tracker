doctype html
html
  head
    include includes/head.pug
    title= title    
  body
    div.container
      div.col.text-center          
        a.h1.text-dark(href="/") Issue Tracker
      h2 User Stories:
      ul.list-group.mb-4
        li.list-group-item Prevent cross site scripting (XSS) attacks.
        li.list-group-item I can #[strong POST] #[code /api/{projectname}/issues/] with form data containing required #[em issue_title], #[em issue_text], #[em created_by], and optional #[em assigned_to] and #[em status_text].
        li.list-group-item The object saved (and returned) will include all of those fields (blank for optional no input) and also include #[em created_on](date/time), #[em open](boolean, true for open, false for closed), and #[em _id].
        li.list-group-item I can #[strong PUT] #[code /api/{projectname}/issues/] with a #[em _id] and any fields in the object with a value to object said object. Returned will be 'successfully updated' or 'could not update '+ _id. This should always update #[em updated_on]. If no fields are sent return 'no updated field sent'.
        li.list-group-item I can #[strong DELETE] #[code /api/{projectname}/issues/] with a #[em _id] to completely delete an issue. If no #[em _id] is sent return 'id error', success: 'deleted '+ _id, failed: 'could not delete '+ _id.
        li.list-group-item I can #[strong GET] #[code /api/{projectname}/issues/] for an array of all issues on that specific project with all the information for each issue as was returned when posted.
        li.list-group-item I can filter my get request by also passing along any field and value in the query(ie. #[code /api/{projectname}/issues/?open=false]). I can pass along as many fields/values as I want.
        li.list-group-item All 11 functional tests are complete and passing.

      h2 Front End Example:
      a.h3.text-primary(href="/apitest/issues") Go to {project_url}/apitest/issues
      

    include includes/foot.pug